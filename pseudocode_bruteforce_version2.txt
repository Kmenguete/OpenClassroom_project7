Bruteforce Algorithm
Function main()
Start
combinations[2^20] : shares dictionary array
for i = 0 ; i < len(combinations); i = i + 1
    binary = combinations[i]
    actions[undefined number in fact, it depends on the total price of shares] : shares
    profit of share = 0
    cost of share = 0
    for j = 0; j < len(binary); j = j + 1
        if binary[j] == "1":
            add share to the actions list
    for each action in actions:
        profit of share = profit of share + profit of every shares
        cost of share = cost of share + cost share of every shares
    if the total cost of a shares list is less of equal to 500 euros:
        add this shares list to the combinations array.
    Sort every combination according their profit.
    return the first combination of the list(the most profitable shares list)
End
